{"version": 2, "width": 266, "height": 60, "timestamp": 1613469140, "env": {"SHELL": "/bin/zsh", "TERM": "screen-256color"}}
[0.945733, "o", "#"]
[1.135913, "o", " "]
[1.228999, "o", "S"]
[1.320451, "o", "t"]
[1.414922, "o", "ep"]
[1.507481, "o", " "]
[1.601337, "o", "1"]
[1.693974, "o", ":"]
[1.785907, "o", " "]
[1.88008, "o", "sh"]
[1.970521, "o", "o"]
[2.063503, "o", "w"]
[2.157987, "o", " "]
[2.253089, "o", "a"]
[2.437266, "o", "va"]
[2.529062, "o", "i"]
[2.62126, "o", "l"]
[2.716362, "o", "a"]
[2.807542, "o", "b"]
[2.900487, "o", "le"]
[2.993937, "o", " "]
[3.08406, "o", "t"]
[3.17901, "o", "a"]
[3.270485, "o", "s"]
[3.360761, "o", "ks"]
[3.451855, "o", "\r\n"]
[3.665195, "o", ">"]
[3.853888, "o", " "]
[3.944072, "o", "a"]
[4.036417, "o", "u"]
[4.129015, "o", "to"]
[4.219189, "o", "t"]
[4.311366, "o", "o"]
[4.40258, "o", "o"]
[4.493928, "o", "l"]
[4.587277, "o", "-h"]
[4.679063, "o", "e"]
[4.769676, "o", "l"]
[4.953978, "o", "p"]
[5.044054, "o", "e"]
[5.137231, "o", "r "]
[5.229097, "o", "t"]
[5.319405, "o", "a"]
[5.41001, "o", "s"]
[5.500022, "o", "k"]
[5.594029, "o", "s\r\n"]
[5.815782, "o", "USAGE\r\n  <task> <task description file>\r\n  help <task>\r\n  help\r\n\r\nTASK TYPES\r\n  al-model   ::  Finds an interpretation that satisfies a given statement\r\n  al-equiv   ::  Finds an equivalent statement by brute forcing\r\n  al-trans   ::  Finds an equivalent statement by recursive transformation\r\n"]
[5.815951, "o", "  al-cnf     ::  Finds a semantically equivalent cnf for a given statement\r\n  al-dnf     ::  Finds a semantically equivalent dnf for a given statement\r\n  sets       ::  Finds an expression that evaluates to a given set\r\n  multisets  ::  Finds an expression that evaluates to a given multi set (bag)\r\n"]
[5.816117, "o", "  rels       ::  Finds an expression that evaluates to a given relation\r\n  graphs     ::  Finds an expression that evaluates to given graph\r\n  circle     ::  Finds a circle of given length in a graph\r\n  hamilton   ::  Finds a hamilton path in a graph\r\n  bipartit   ::  Finds a set of vertices that split a graph into two bipartit subgraphs\r\n"]
[5.816269, "o", "  iso        ::  Finds an isomorphism from one graph to another\r\n  graphparam ::  Creates a graph from a given set of contraints\r\n  structs    ::  Finds an expression with different value (semantically) in two structs\r\n\r\n"]
[7.8301, "o", "\u001b[H\u001b[J"]
[7.834287, "o", "#"]
[8.023086, "o", " "]
[8.113438, "o", "S"]
[8.207729, "o", "t"]
[8.302853, "o", "ep"]
[8.394101, "o", " "]
[8.489144, "o", "2"]
[8.580686, "o", ":"]
[8.671164, "o", " "]
[8.763006, "o", "sh"]
[8.857733, "o", "o"]
[8.952757, "o", "w"]
[9.04475, "o", " "]
[9.138568, "o", "d"]
[9.324484, "o", "es"]
[9.414923, "o", "c"]
[9.50778, "o", "r"]
[9.598329, "o", "i"]
[9.693396, "o", "p"]
[9.78484, "o", "ti"]
[9.879227, "o", "o"]
[9.973411, "o", "n"]
[10.066701, "o", " "]
[10.157805, "o", "f"]
[10.25166, "o", "or"]
[10.344785, "o", " "]
[10.438566, "o", "a"]
[10.625716, "o", " "]
[10.718072, "o", "s"]
[10.809589, "o", "pe"]
[10.901645, "o", "c"]
[10.993264, "o", "i"]
[11.087289, "o", "f"]
[11.179282, "o", "i"]
[11.270756, "o", "c "]
[11.364544, "o", "t"]
[11.457814, "o", "a"]
[11.548445, "o", "s"]
[11.64358, "o", "k"]
[11.737336, "o", "\r\n"]
[11.9494, "o", ">"]
[12.138449, "o", " "]
[12.229571, "o", "a"]
[12.323269, "o", "u"]
[12.41589, "o", "to"]
[12.508279, "o", "t"]
[12.603331, "o", "o"]
[12.696381, "o", "o"]
[12.790419, "o", "l"]
[12.880607, "o", "-h"]
[12.972734, "o", "e"]
[13.065635, "o", "l"]
[13.158629, "o", "p"]
[13.250713, "o", "e"]
[13.438445, "o", "r "]
[13.532731, "o", "h"]
[13.625622, "o", "e"]
[13.718953, "o", "l"]
[13.812984, "o", "p"]
[13.907945, "o", " m"]
[14.002023, "o", "u"]
[14.094734, "o", "l"]
[14.187296, "o", "t"]
[14.280421, "o", "i"]
[14.375322, "o", "se"]
[14.465961, "o", "t"]
[14.557908, "o", "s"]
[14.651975, "o", "\r\n"]
[14.869814, "o", "\r\nTASK NAME\r\n\tmultisets\r\n\r\nAUTOTOOL NAME\r\n\tMultiMengen, MM\r\n\r\n"]
[14.869951, "o", "DESCRIPTION\r\n\tFinds an expression that evaluates to a given multi set (bag)\r\n\r\n\r\nPARAMETERS\r\n - operators\r\n\tThe operators the expression may contain\r\n\r\n - sets\r\n\tThe given sets the expression may contain\r\n\r\n - target\r\n\tThe value the expression should match.\r\n"]
[14.870083, "o", "\r\n - mode\r\n\tThe search mode. Available modes are\r\n\t- Unlimited. Tries every possible term / expression (in serial).\r\n\t  Use this only if parallel execution is no option and\r\n\t  you really need a result. May burst your device into\r\n\t  flames; use carefully.\r\n"]
[14.870202, "o", "\t- Serial n, n > 0\r\n\t  Evaluates n possible terms / expressions in serial, where\r\n\t  the order of given operators defines how the terms are built.\r\n\t  Use this if your tasks asks for a large (>4) number of\r\n\t  operators and try to re-order the operators manually to find a result.\r\n"]
[14.870334, "o", "\t- Parallel n, n > 0\r\n\t  Evaluates !m * n trees / expressions in parallel, where m is\r\n\t  the number of given operators with artiy 1 or greater.\r\n\t  Use this if your number of operators is small (e.g. < 5) or your\r\n\t  number of available CPU cores is tremendous.\r\n"]
[14.870418, "o", "\t  Note that all !m forests must be computed before a result may\r\n\t  be returned, so in situations where the task description asks for\r\n\t  a large number of operators this mode is slower than the optimal\r\n\t  serial evaluation (meaning given optimal operator order) but almost\r\n"]
[14.870506, "o", "\t  always faster then the worst serial evaluation.\r\n\r\n\r\nEXAMPLE INPUT\r\n\r\n```\r\n"]
[14.870783, "o", "MultiSetDescription\r\n    { mode = Parallel 250000\r\n    , operators =\r\n        [ +, &, - ]\r\n    , sets =\r\n        [ A = { p: 1, q: 3 }, B = { q: 2, r: 3 }, C = { q: 1, r: 1 } ]\r\n    , target =\r\n        { q: 1 }\r\n    }\r\n```\r\n"]
[14.870954, "o", "\r\n"]
[16.881846, "o", "\u001b[H\u001b[J"]
[16.885581, "o", "#"]
[17.071986, "o", " "]
[17.164364, "o", "S"]
[17.257978, "o", "t"]
[17.352396, "o", "ep"]
[17.447092, "o", " "]
[17.541823, "o", "3"]
[17.636948, "o", ":"]
[17.731322, "o", " "]
[17.825533, "o", "ex"]
[17.920658, "o", "t"]
[18.014151, "o", "r"]
[18.108674, "o", "a"]
[18.200609, "o", "c"]
[18.295123, "o", "t "]
[18.388647, "o", "t"]
[18.573736, "o", "a"]
[18.664461, "o", "s"]
[18.758018, "o", "k"]
[18.853116, "o", " d"]
[18.944369, "o", "e"]
[19.038137, "o", "s"]
[19.129531, "o", "c"]
[19.220858, "o", "r"]
[19.312234, "o", "ip"]
[19.404038, "o", "t"]
[19.497794, "o", "i"]
[19.591417, "o", "o"]
[19.776005, "o", "n"]
[19.870216, "o", " t"]
[19.961697, "o", "o"]
[20.054189, "o", " "]
[20.144409, "o", "f"]
[20.238731, "o", "i"]
[20.329447, "o", "le"]
[20.422054, "o", " "]
[20.515712, "o", "("]
[20.60809, "o", "a"]
[20.70055, "o", "n"]
[20.795001, "o", "d "]
[20.889899, "o", "m"]
[21.070905, "o", "o"]
[21.164248, "o", "d"]
[21.258114, "o", "i"]
[21.351047, "o", "fy"]
[21.445904, "o", ","]
[21.53949, "o", " "]
[21.630877, "o", "i"]
[21.725845, "o", "f"]
[21.820807, "o", " n"]
[21.913629, "o", "e"]
[22.008045, "o", "e"]
[22.09822, "o", "d"]
[22.192728, "o", "e"]
[22.375409, "o", "d)"]
[22.470626, "o", "\r\n"]
[22.682935, "o", ">"]
[22.86676, "o", " "]
[22.958265, "o", "a"]
[23.048631, "o", "u"]
[23.139729, "o", "to"]
[23.229832, "o", "t"]
[23.320011, "o", "o"]
[23.414226, "o", "o"]
[23.508129, "o", "l"]
[23.602765, "o", "-h"]
[23.69651, "o", "e"]
[23.789752, "o", "l"]
[23.971516, "o", "p"]
[24.06405, "o", "e"]
[24.158092, "o", "r "]
[24.252729, "o", "h"]
[24.346573, "o", "e"]
[24.43732, "o", "l"]
[24.53032, "o", "p"]
[24.624402, "o", " m"]
[24.715918, "o", "u"]
[24.808196, "o", "l"]
[24.90313, "o", "t"]
[24.994551, "o", "i"]
[25.086178, "o", "se"]
[25.273132, "o", "t"]
[25.367395, "o", "s"]
[25.461789, "o", " "]
[25.556477, "o", "|"]
[25.650444, "o", "ta"]
[25.744557, "o", "i"]
[25.836187, "o", "l"]
[25.930711, "o", " "]
[26.020839, "o", "-"]
[26.115835, "o", "11"]
[26.208171, "o", " "]
[26.301178, "o", "|"]
[26.394566, "o", "h"]
[26.487674, "o", "e"]
[26.67293, "o", "ad"]
[26.766733, "o", " "]
[26.85969, "o", "-"]
[26.951732, "o", "9"]
[27.044611, "o", " "]
[27.138614, "o", "> "]
[27.232385, "o", "t"]
[27.325707, "o", "a"]
[27.416481, "o", "s"]
[27.50828, "o", "k"]
[27.601599, "o", ".t"]
[27.695753, "o", "x"]
[27.787591, "o", "t"]
[27.974423, "o", "\r\n"]
[28.202196, "o", ">"]
[28.388269, "o", " "]
[28.479808, "o", "c"]
[28.573428, "o", "a"]
[28.668395, "o", "t "]
[28.760875, "o", "t"]
[28.854304, "o", "a"]
[28.947993, "o", "s"]
[29.038252, "o", "k"]
[29.129766, "o", ".t"]
[29.220834, "o", "x"]
[29.315102, "o", "t"]
[29.408306, "o", "\r\n"]
[29.410983, "o", "MultiSetDescription\r\n    { mode = Parallel 250000\r\n    , operators =\r\n        [ +, &, - ]\r\n    , sets =\r\n        [ A = { p: 1, q: 3 }, B = { q: 2, r: 3 }, C = { q: 1, r: 1 } ]\r\n    , target =\r\n        { q: 1 }\r\n    }\r\n"]
[31.416468, "o", "\u001b[H\u001b[J"]
[31.420554, "o", "#"]
[31.602953, "o", " "]
[31.6947, "o", "S"]
[31.787689, "o", "t"]
[31.879917, "o", "ep"]
[31.974471, "o", " "]
[32.068559, "o", "4"]
[32.163063, "o", ":"]
[32.255025, "o", " "]
[32.3471, "o", "ru"]
[32.437669, "o", "n"]
[32.530954, "o", " "]
[32.621647, "o", "t"]
[32.808434, "o", "a"]
[32.898814, "o", "sk"]
[32.993937, "o", "\r\n"]
[33.206822, "o", ">"]
[33.394044, "o", " "]
[33.488383, "o", "a"]
[33.579922, "o", "u"]
[33.670932, "o", "to"]
[33.764586, "o", "t"]
[33.858514, "o", "o"]
[33.951285, "o", "o"]
[34.04598, "o", "l"]
[34.139739, "o", "-h"]
[34.229941, "o", "e"]
[34.322946, "o", "l"]
[34.418117, "o", "p"]
[34.508425, "o", "e"]
[34.694765, "o", "r "]
[34.78774, "o", "m"]
[34.87996, "o", "u"]
[34.971712, "o", "l"]
[35.06516, "o", "t"]
[35.158505, "o", "is"]
[35.253402, "o", "e"]
[35.344863, "o", "t"]
[35.438219, "o", "s"]
[35.532813, "o", " "]
[35.627742, "o", "ta"]
[35.717957, "o", "s"]
[35.80852, "o", "k"]
[35.993771, "o", "."]
[36.087672, "o", "t"]
[36.180021, "o", "xt"]
[36.274753, "o", "\r\n"]
[36.495246, "o", "RESULT:\r\r\n"]
[36.495435, "o", "\tA & C\r\n"]
[41.512266, "o", "\u001b[H\u001b[J"]
[41.513096, "o", "\u001b[1m\u001b[3m%\u001b[23m\u001b[1m\u001b[0m                                                                                                                                                                                                                                                                         \r \r"]
